# -*- coding: utf-8 -*-
"""flight_delay.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FwGRY_YfAShdrRsFo4yN_2PZGnUeTmop
"""

# package setup
import pandas as pd
from xgboost import XGBRegressor, XGBClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error, mean_squared_error

# load dataset
dataset = pd.read_csv('flight_delays_data.csv')

# split predictors and target
x = dataset.iloc[:,1:8]
y = dataset.iloc[:,9]

# quick processing
x.flight_no = pd.get_dummies(x.flight_no, prefix='flight_no')
x.Departure = pd.get_dummies(x.Departure, prefix='Departure')
x.Arrival = pd.get_dummies(x.Arrival, prefix='Arrival')
x.Airline = pd.get_dummies(x.Airline, prefix='Airline')

# split training and testing
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=10)

# fit model xgboost
model = XGBClassifier()
model.fit(x_train, y_train)

# make predictions
y_pred = model.predict(x_test)

# evaluate predictions
q1 = mean_absolute_error(y_test, y_pred, multioutput='uniform_average')
q2 = mean_squared_error(y_test, y_pred, multioutput='uniform_average')

print(q1)

print(q2)